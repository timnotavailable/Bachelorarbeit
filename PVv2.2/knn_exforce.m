% boxplots for walk,siup,jump,roll,shake,run,shoulderhit,push
% parameters:winlen = 600;fs = 50Hz;thwidth = 25;peakthreshold = 0.2;peakthreshold_th = 20;
% disp('Parameters:winlen = 400;fs = 50Hz;peakthreshold = 0.6;before_start = 55;before_end = 5;before_peak = 5;after_peak = 5;after_start = 5;after_end = 55;');
thres=0.15;
disp('K-NN: K=3');
% raw feature data
% 注意：这里的日常生活动作数据并没有按最值过滤，这是为了训练集保留了所有数据。在暴力分类后，需要重新采集过滤后的日常动作数据，重新分类
% walk
walk_peak_polarr = [0	0	0.556	0.7848	0.5049	0.5515	0.522	0.5992	0.5982	0.7582	0.7014	0.5932	0.5143	0	1.1535	0.6475	1.2341	0.633	0.6141	0.631	0.5902	0.6196	0.7262	0.5253	0.6011	0.5614	1.1346	0.5001	0.7511	0.5103	0.5103	0.6513	0.5275	0.894	0.8177	0.5659	0.7284	0.5811	0.6563	0.6563	0.6833	0.5827	0.9196	0.6447	0.7657	0.7449	0.5041	0.8335	0.5654	1.409	1.0263	0.6505	1.3455	0.8163	0.9541	0.6283	0.5617	0.7288	0.512	0.8977	0.7115	0.9356	1.3891	0.8932	0.6532	0.9093	0.9439	0.589	0.5526	0.7616	1.0241	0.6632	0.5873	1.1582	0.8511	0.8087	0.8548	1.0615	0.5444	0.8988	0.5738	1.2075	0.6372	1.1377	0.5106	1.7226	1.0171	0.5483	0.8087	0.8548	1.0615	0.5444	0.8988	0.5738	1.2075	0.6372	1.1377	0.5106	1.7226	1.0171	0.5483	1.2141	0]';
walk_delta_polarth = [0	0	21.0291	28.0102	2.7424	3.6044	0.641	121.4453	117.3368	39.1293	80.5467	15.5516	110.822	0	18.2257	11.2791	35.9286	0.136	26.6547	40.284	12.9309	18.9536	24.0556	95.6412	16.8408	157.5766	149.2661	77.5436	34.9238	12.5144	12.5144	104.3064	30.8174	100.683	146.1839	122.4776	57.5529	34.0508	15.8498	15.8498	75.3475	51.3622	41.8646	42.9756	54.1547	27.6904	34.8626	17.4671	28.7526	82.1478	20.9433	14.3719	15.0646	7.7698	126.3837	26.7061	41.4359	0.2281	9.6425	31.5952	1.1748	8.472	83.5894	21.9954	73.828	4.2863	0.3946	9.4807	62.2703	29.691	38.9759	1.4378	1.2081	13.4969	2.7285	40.406	6.9187	15.4702	7.6904	121.5322	62.1431	49.8657	43.0149	53.9117	20.7056	13.6124	7.3221	25.9403	40.406	6.9187	15.4702	7.6904	121.5322	62.1431	49.8657	43.0149	53.9117	20.7056	13.6124	7.3221	25.9403	6.6709	0]';
walk_mean_peak_gyro = [0	0	195.3805	34.0388	17.3736	34.8246	46.0347	61.3958	73.9321	76.427	76.6098	55.2824	43.2956	0	45.5388	42.7238	47.2533	61.9614	61.0364	66.8704	60.4165	38.5428	85.8696	39.9429	57.226	54.0527	82.0131	72.4105	56.6865	53.5106	53.5106	52.7338	75.1312	63.7006	60.2765	95.0304	103.4903	42.8203	45.8617	45.8617	103.7427	118.7395	140.7751	107.6991	59.6469	57.6512	68.9663	107.2401	117.9289	100.3819	81.3122	109.6035	148.3978	100.7607	98.8094	74.5572	66.5436	83.719	125	144.3736	141.3333	108.1898	96.8997	95.6617	81.5228	127.6532	150.1859	132.4835	98.6705	91.7543	71.6465	108.7098	125.1886	133.9386	65.3231	46.9075	91.801	117.6424	130.0803	120.823	101.5655	97.7886	85.5772	72.3925	88.9197	134.653	55.8104	90.3545	46.9075	91.801	117.6424	130.0803	120.823	101.5655	97.7886	85.5772	72.3925	88.9197	134.653	55.8104	90.3545	109.199	0]';
walk_acc_y = [0	0	9.5723	10.7412	12.3535	14.8518	7.603	18.5061	21.1988	21.2938	21.7668	27.6431	21.0031	0	16.3708	16.6813	18.1882	17.5903	18.0254	17.9746	15.5381	12.5566	16.2673	12.304	13.2913	14.197	19.4745	17.4352	18.0175	13.1255	14.332	16.933	18.0109	13.061	13.3081	13.4556	13.3589	10.9216	12.3696	17.1791	53.7381	56.4595	58.2525	60.9003	65.4684	66.3549	76.3704	78.2502	78.3442	78.8032	79.1495	78.9498	80.7037	82.6253	82.6253	82.3401	82.6448	82.42	81.6805	82.1414	82.9942	81.7147	82.6125	80.5296	79.6487	78.3047	77.366	75.5499	75.1401	74.0348	74.2795	73.8547	73.9289	73.3474	73.2327	75.4845	73.0428	74.0115	75.3687	75.2627	76.4549	74.1176	77.3532	78.7819	78.0602	79.8135	83.7401	78.998	51.0711	58.2525	60.7419	60.9003	60.7526	62.6105	68.7601	70.7916	72.1065	77.3345	79.2123	78.8592	80.5565	81.6492	0]';
walk_mean_afterpeak_polarr = walk_peak_polarr; % []';
walk_var_afterpeak_polarr = walk_peak_polarr;
walk_mean_afterpeak_gyro = walk_peak_polarr;
walk_var_afterpeak_gyro = walk_peak_polarr;
% situp
situp_peak_polarr = [1.3757	1.0787	1.0612	1.3335	0.9061	0.9328	0.8856	0.8367	0.7825	0.6633	0.6597	0.8297	0.6429	0.6958	0.7261	1.0138	1.2354	1.3552	1.2048	0.9884	0.8092	1.2101	1.3338	1.2253	1.1187	1.0915	0.7614	0.7951	0.6666	0.6578	0.8323	0.8916	0.8108	0.8052	0.7652	0.9128	0.8723	1.378	1.1309	0.8964	0.8356	0.9319	0.951	1.0659	0.9536	0.9094	0.9438	0.9255	0.9083	0.9137	0.91	0.9205	0.9221	0.9244	0.9316	0.9494	0.8896	0.9173	1.378	1.1309	0.8964	0.8356	0.9319	0.951	1.0659	0.9536	0.9094	0.9438	0.9255	0.9083	0.9137	0.91	0.9205	0.9221	0.9244	0.9316	0.9494	0.8896	0.9173	0.9224	0.9387	0.9227	0.9189	0.9247	0.9234	0.9194	0.923	0.9283	0.9341	0.9244	0.9192	0.9118	0.9056	0.9162	0.9209	0.9038	0.9303	0.9392	0.9329	0.9127	0.9285	0.9246	0.9189	0.9087	0.9319	0.938	0.9277	0.9174	0.927	0.9203	0.9154	0.9758	0.9257	0.9338	0.9454	0.929	0.919	0.9052	0.9229	0.917	0.9205	0.9281	0.9096	0.9172	0.8943	0.9452	0.9904	1.0028	0.9715	1.0023	0.9283	0.9373	0.9154	0.9758	0.9257	0.9338	0.9454	0.929	0.919	0.9052	0.9229	0.917	0.9205	0.9281	0.9096	0.9172	0.8943	0.9452	0.9904	1.0028	0.9715	1.0023	0.9283	0.9373	0.9465	0.9265	0.9376	0.9015	0.9184	0.9805	0.9133	0.9379	0.9284	0.9122	0.9712	0.9025	0.9315	0.9396	0.9519	0.9075	0.9244	0.9311	0.9463	0.9434	0.9331	0.9303	0.9269	0.9505	0.9206	0.9216	0.9146	0.9132	0.9132	0.9369	0.9103	0.9327	0.9191	0.9206	0.9187	0.9208	0.9187	0.9324	0.9031	0.9294	0.9114	0.9191	0.919	0.9162	0.9179	0.9379	0.9183	0.9175	0.9505	0.9206	0.9216	0.9146	0.9132	0.9132	0.9369	0.9103	0.9327	0.9191	0.9206	0.9187	0.9208	0.9187	0.9324	0.9031	0.9294	0.9114	0.9191	0.919	0.9162	0.9179	0.9379	0.9183	0.9175	0.9396	0.9082	0.9091	0.9035	0.9684	0.9659	0.9352	0.9381	0.9176	0.949	0.9185	0.9618]';
situp_delta_polarth = [3.2385	0.399	21.8647	17.6773	8.6967	5.9124	7.1856	7.8256	6.9126	2.9574	7.6467	174.349	156.9861	139.614	122.933	135.7116	125.3209	91.2974	71.9453	31.105	11.5131	4.3749	6.2919	3.0839	11.6251	7.2313	0.2357	7.2499	10.9562	6.8716	177.1234	177.6484	166.9178	158.4146	142.5014	127.5338	136.4453	113.4486	84.7195	55.0632	45.1478	43.3347	34.641	6.203	1.9658	3.1782	2.6262	3.2666	2.4677	3.2501	1.1434	1.4147	1.8518	1.6298	0.9899	0.4151	0.9673	0.1961	113.4486	84.7195	55.0632	45.1478	43.3347	34.641	6.203	1.9658	3.1782	2.6262	3.2666	2.4677	3.2501	1.1434	1.4147	1.8518	1.6298	0.9899	0.4151	0.9673	0.1961	3.1224	2.5016	2.0944	1.4243	0.2672	0.0695	1.137	0.611	1.0458	1.3934	0.9332	0.2404	0.4373	0.2266	0.9091	0.2053	0.2789	0.57	0.2328	1.2339	1.4148	1.4937	0.4841	0.1998	0.3678	1.0966	0.4337	0.3339	0.7887	1.6549	1.0669	0.7737	3.0345	2.3933	0.927	2.6466	6.1956	6.3663	8.0097	1.529	0.4052	0.6847	1.0647	1.04	0.5372	1.0648	0.2202	4.4277	2.0905	4.227	3.4763	5.9193	0.3675	0.7737	3.0345	2.3933	0.927	2.6466	6.1956	6.3663	8.0097	1.529	0.4052	0.6847	1.0647	1.04	0.5372	1.0648	0.2202	4.4277	2.0905	4.227	3.4763	5.9193	0.3675	1.5055	0.3551	0.9281	1.2687	0.9105	0.6825	3.331	3.9249	2.9242	2.0249	1.2443	0.2406	1.279	0.1467	0.6847	0.7709	0.4262	0.1202	0.3586	0.8535	0.9936	0.5122	0.5343	0.341	0.2907	0.684	0.3134	0.2827	0.0648	0.2984	0.0799	0.0439	0.2737	0.221	0.5055	0.3437	0.383	0.4873	0.9742	1.7106	0.5427	1.1601	1.5444	0.5406	1.4945	0.4803	1.0353	0.7103	0.341	0.2907	0.684	0.3134	0.2827	0.0648	0.2984	0.0799	0.0439	0.2737	0.221	0.5055	0.3437	0.383	0.4873	0.9742	1.7106	0.5427	1.1601	1.5444	0.5406	1.4945	0.4803	1.0353	0.7103	1.7527	2.758	4.5237	2.0227	2.4075	8.4603	0.4602	5.4243	2.1424	2.6314	1.2092	1.2173]';
situp_mean_peak_gyro = [44.6441	59.131	79.5359	86.1545	90.8031	93.083	101.0664	109.2148	117.6285	130.8058	134.815	115.6075	63.3492	140.3107	135.9417	130.9609	126.5161	103.1276	69.427	36.9213	35.2565	74.0936	94.4616	112.1535	129.3812	130.7452	121.4906	122.1046	123.7347	128.6401	143.6878	109.9484	82.005	65.535	69.9006	164.4492	152.0453	119.8319	84.2214	33.1217	31.3407	28.3663	20.7898	19.7727	4.5604	3.7751	2.6974	3.1017	2.4801	2.6653	3.1165	2.9083	3.677	4.084	4.2949	3.7882	3.7856	4.915	119.8319	84.2214	33.1217	31.3407	28.3663	20.7898	19.7727	4.5604	3.7751	2.6974	3.1017	2.4801	2.6653	3.1165	2.9083	3.677	4.084	4.2949	3.7882	3.7856	4.915	4.5616	4.3721	4.3787	5.0446	5.7882	4.7775	3.4356	2.9133	2.3083	2.4316	1.8601	1.6648	1.5632	1.7295	1.8118	2.1972	2.1104	2.545	3.0466	2.6092	1.9873	1.8641	1.9326	1.7675	1.7257	2.2428	2.9231	3.0173	2.4061	2.0956	2.2496	3.6535	5.676	9.1939	9.0467	9.4656	12.2812	10.8932	8.683	4.0175	3.4827	3.009	3.1908	4.6039	8.8916	15.4003	18.5983	13.2667	10.4932	10.4795	13.6713	12.5995	8.9886	3.6535	5.676	9.1939	9.0467	9.4656	12.2812	10.8932	8.683	4.0175	3.4827	3.009	3.1908	4.6039	8.8916	15.4003	18.5983	13.2667	10.4932	10.4795	13.6713	12.5995	8.9886	8.4541	8.2359	5.826	4.6217	9.4988	13.646	7.0651	6.4458	4.926	5.7018	6.7962	6.7339	5.0649	4.7898	3.1334	3.9373	3.7858	3.7024	3.6831	3.6915	2.7319	2.6483	2.5389	2.3018	2.1352	2.3155	2.2733	2.3032	2.228	2.5578	2.5306	2.4436	2.3929	2.6872	3.1837	3.7954	4.2651	4.7666	4.7538	4.4716	3.7782	3.2151	2.5569	2.2577	2.6347	2.8015	5.0362	6.9311	2.3018	2.1352	2.3155	2.2733	2.3032	2.228	2.5578	2.5306	2.4436	2.3929	2.6872	3.1837	3.7954	4.2651	4.7666	4.7538	4.4716	3.7782	3.2151	2.5569	2.2577	2.6347	2.8015	5.0362	6.9311	10.3417	13.1219	14.3129	15.0282	12.8195	12.2662	10.7545	11.5476	9.8509	6.7961	6.4188	6.9775]';
situp_acc_y = [74.0083	73.219	70.6235	69.2732	66.7588	64.7588	59.6626	56.708	54.0417	51.1433	50.2014	43.5649	44.9641	53.6582	54.2505	55.9197	56.5889	56.9731	57.0151	56.9915	57.4463	58.1921	58.2686	58.397	58.4998	57.8423	55.885	55.4785	55	54.3008	48.9685	49.741	49.8926	49.9087	49.875	54.5154	56.54	64.2759	67.4778	71.6113	73.2229	74.8669	77.3113	83.2546	89.4673	90.5603	92.875	94.1655	94.7715	94.9424	94.8276	93.6172	92.0063	91.738	91.8394	91.1594	90.7026	91.1929	71.3018	68.4822	62.436	59.6626	56.708	52.855	48.7292	45.52	44.0723	43.2122	43.8257	44.727	45.1553	43.8789	44.2515	45.5186	46.0737	47.9727	51.3564	52.4546	53.6582	54.8933	55.6123	56.6907	56.8052	57.0151	56.8896	57.6716	58.1494	58.2305	58.397	58.229	57.1582	56.1138	55.4385	55	53.936	52.8889	51.2	49.5149	47.9861	49.4111	49.8982	49.8706	49.875	47.6621	48.4436	49.3342	50.7847	52.3218	53.967	56.54	60.0627	62.5339	67.4778	69.48	74.8669	79.7878	81.5166	84.1079	89.4673	90.5603	91.7354	93.8491	94.7715	95.0076	94.8276	94.0073	91.8638	91.7856	91.1594	91.0562	90.7026	91.0679	73.47	72.4006	68.4822	65.7876	56.708	51.1433	50.2014	48.0781	45.52	44.0723	43.3486	43.5649	44.727	45.0264	43.8789	43.9634	45.7671	46.9717	51.3564	52.3098	52.4546	54.6838	55.9197	56.7671	57.1025	57.0151	56.998	57.1089	58.1921	58.3237	58.5049	56.928	56.1138	54.3008	52.2288	51.2	47.9861	48.9685	49.8982	49.9087	49.7422	48.5571	50.7847	53.4231	55.2205	58.4761	62.5339	65.123	68.832	70.1516	72.4221	74.8669	78.148	81.5166	84.9629	87.4006	89.4673	90.5603	92.2949	94.1655	94.8821	94.9631	94.0073	92.6838	91.6992	91.3958	91.0562	90.7427	91.1577	91.0679	74.0083	72.4006	70.6235	66.7588	64.7588	61.1433	56.708	51.9316	50.2014	47.5879	45.9397	45.52	44.0723	43.2881	43.8257	45.2515	44.9641	43.9634	44.8269	46.439	51.6301	52.3098	52.7703	53.8882	54.6838	55.2668	56.2654	56.7671	56.9038	57.0701	56.998	56.9915	57.8523	58.1921	58.4167	57.4492	55.885]';
situp_mean_afterpeak_polarr = situp_peak_polarr;
situp_var_afterpeak_polarr = situp_peak_polarr;
situp_mean_afterpeak_gyro = situp_peak_polarr;
situp_var_afterpeak_gyro = situp_peak_polarr;
% jump
jump_peak_polarr = [1.5004	0.5219	1.1433	0.8683	1.1153	0.5333	0.9163	0.7959	0.664	1.196	1.108	1.2296	0.5454	0.7803	0.5627	0.6608	1.5749	2.3043	0.6654	0.6293	0.8879	0.5547	0.9185	1.2832	0.8189	0.8428	0.8429	1.0591	1.1232	0.9477	1.3457	1.1101	1.561	0.9032	1.1403	2.1964	1.544	1.0343	0.7562	2.74	1.002	1.0127	1.089	1.5232	0.8057	0.5414	0.6402	2.4664	0.9166	1.9128	1.3602	0.66	]';
jump_delta_polarth = [126.5998	145.1294	30.1373	174.6384	34.7646	2.0667	20.4523	79.5367	58.4259	83.5001	31.9193	73.5599	79.5382	18.7869	132.1894	26.467	139.8252	37.1375	2.7891	72.4384	53.3852	90.8853	58.6301	168.6664	25.9536	59.2701	1.929	156.664	128.6128	61.2338	88.064	146.2362	76.1875	43.9809	63.06	61.1137	83.71	67.3452	67.0546	21.1211	36.3559	18.8119	120.9546	9.6727	73.0151	43.3738	34.9001	30.6365	74.3209	42.6887	46.6114	24.9555	]';
jump_mean_peak_gyro = [85.6985	101.5219	101.0479	89.4773	61.5684	64.7898	89.0145	85.9527	77.4382	106.3332	104.2281	110.5642	97.6588	91.0321	99.3368	81.4212	102.559	95.8067	105.1574	75.6728	83.8262	100.1465	95.983	119.2792	116.4309	84.891	56.3607	80.832	94.4778	107.9445	120.9427	153.8332	180.6735	162.1297	173.0693	175.9056	176.1521	156.406	106.398	94.6354	73.6594	92.5169	108.7671	131.9653	107.4657	117.7589	123.346	131.1119	131.9085	127.5337	128.4065	121.2415	]';
jump_acc_y = [93.5521	94.0957	93.7872	96.6118	95.8012	96.1337	96.7627	96.1828	96.3088	97.6499	97.6501	97.961	96.8308	98.1094	97.8554	96.8828	93.1055	91.6609	86.1556	72.5577	71.9228	68.2915	64.5222	59.4438	54.0517	50.8599	49.0731	93.2794	91.316	92.8527	91.9566	92.8734	94.8294	94.9739	96.5883	94.4904	95.8491	98.5595	97.907	95.1847	95.2435	96.4848	93.9431	95.0107	92.6537	93.9162	96.1196	95.2831	95.4978	95.2432	95.933	98.2897	]';
jump_mean_afterpeak_polarr = jump_peak_polarr;
jump_var_afterpeak_polarr = jump_peak_polarr;
jump_mean_afterpeak_gyro = jump_peak_polarr;
jump_var_afterpeak_gyro = jump_peak_polarr;
% roll
roll_peak_polarr = []';
roll_delta_polarth = []';
roll_mean_peak_gyro = []';
roll_acc_y = []';
roll_mean_afterpeak_polarr = []';
roll_var_afterpeak_polarr = []';
roll_mean_afterpeak_gyro = []';
roll_var_afterpeak_gyro = []';
% shake
shake_peak_polarr = [1.3046	1.3669	2.8284	0.9192	0.7962	1.5318	0.8894	]';
shake_delta_polarth = [179.8101	160.6875	159.4047	66.8425	176.3908	40.0958	161.6063	]';
shake_mean_peak_gyro = [93.9497	94.5944	130.8455	98.3754	99.0744	133.1477	95.6913	]';
shake_acc_y = [27.5163	28.296	27.5163	31.2746	24.5378	20.2495	19.7195	]';
shake_mean_afterpeak_polarr = shake_peak_polarr;
shake_var_afterpeak_polarr = shake_peak_polarr;
shake_mean_afterpeak_gyro = shake_peak_polarr;
shake_var_afterpeak_gyro = shake_peak_polarr;
% run
run_peak_polarr = [2.3612	0.8855	1.0785	0.6686	0.718	1.3647	0.5688	1.3875	0.5079	0.5278	1.7747	0.5964	1.3995	0.7254	1.1056	0.744	0.6081	1.0564	1.6872	0.5278	0.5813	1.5139	1.5689	0.8828	1.6362	0.6977	1.0576	0.7702	0.5792	0.9589	0.6241	1.012	0.8123	1.1193	1.1253	1.1223	1.0625	1.0266	1.7633	1.2001	1.3436	2.2739	2.2851	0.5675	2.3934	1.6648	1.2117	0.7252	0.9797	2.0217	0.5319	0.578	1.8571	1.3353	2.447	0.8471	0.8938	1.7836	0.845	0.8203	0.5829	0.6844	0.6333	2.0259	1.4452	2.4385	1.0813	1.3913	0.5685	0.5683	0.9117	1.253	0.7778	0.8113	2.1484	1.3772	1.067	0.5383	0.5658	1.0602	2.4385	1.0813	1.3913	0.5685	0.5683	0.9117	1.253	0.7778	0.8113	2.1484	1.3772	1.067	0.5383	0.5658	1.0602	0.7768	0.5658	0.6652	0.9422	1.69	1.0977	1.1561	0.9919	0.9084	1.0402	0.6402	0.7914	1.1744	1.1626	1.436	0.8577	0.5029	2.3822	2.029	0.9564	2.1179	2.1942	2.1051	1.9677	2.385	0.9252	0.5982	0.7584	0.7244	0.6578	0.7684	0.8228	0.7851	0.5824	0.7497	0.6918	0.8228	0.7851	0.5824	0.7497	0.6918	1.245	1.5825	0.5458	]';
run_delta_polarth = [14.8548	140.0878	21.9813	76.3644	22.8095	11.0007	78.3786	62.6724	22.8787	76.433	14.154	42.4527	6.1808	23.1128	3.1384	38.0895	34.8011	35.5459	25.9765	9.0053	31.4954	35.1383	50.5441	32.8519	36.9007	64.6666	11.8832	16.3076	15.9588	1.7813	17.8817	8.0082	15.1977	24.0525	48.0072	19.3851	133.4894	30.0169	13.441	85.6306	14.4171	17.9097	4.8588	51.9458	14.7901	144.2343	0.0746	121.0223	7.9544	51.4119	27.3288	159.7176	41.6278	111.1703	13.4798	24.0732	12.7325	20.2912	24.6365	3.7522	8.0024	12.6487	22.9232	31.6683	23.8595	7.5278	129.1548	11.8179	3.4112	10.5545	8.5842	52.446	31.9902	56.972	19.5255	127.3768	32.9215	13.8198	103.1588	29.2791	7.5278	129.1548	11.8179	3.4112	10.5545	8.5842	52.446	31.9902	56.972	19.5255	127.3768	32.9215	13.8198	103.1588	29.2791	21.6848	10.0976	29.6362	9.162	18.3646	12.1557	2.9355	7.9332	1.6231	2.0966	10.5902	38.6461	6.8368	12.813	14.1522	50.2341	112.6847	1.9062	154.6254	8.8333	15.969	14.2115	25.252	2.9545	12.5378	12.9729	33.6039	26.9561	23.6802	2.4959	92.8826	30.3033	9.8559	39.4232	2.5049	9.4981	30.3033	9.8559	39.4232	2.5049	9.4981	70.216	102.3453	20.0112	]';
run_mean_peak_gyro = [90.293	87.51	69.8824	74.861	104.0901	103.303	99.1617	113.2793	91.4749	78.9411	117.661	158.8454	80.1909	76.3477	87.7058	104.6047	134.5329	150.1111	77.7599	70.0704	85.9109	118.5614	139.4435	141.64	80.6177	89.4384	104.3098	84.3573	43.9216	91.9013	70.3096	147.0031	139.8093	136.9375	131.7628	149.2903	139.1796	115.2666	100.6985	73.659	72.4572	128.1349	138.9706	159.2593	191.949	180.3636	175.989	161.8557	173.1101	205.3449	173.4284	166.2279	131.3108	139.6748	128.3654	115.8621	75.6379	62.1889	53.5242	54.8123	81.1965	80.1357	151.1593	99.3763	106.7502	113.2057	96.0087	96.1009	97.7909	127.0069	128.3818	122.9378	55.8036	92.7196	102.6984	113.8734	98.0294	152.4768	171.8041	141.6267	113.2057	96.0087	96.1009	97.7909	127.0069	128.3818	122.9378	55.8036	92.7196	102.6984	113.8734	98.0294	152.4768	171.8041	141.6267	187.8374	147.0965	132.0489	131.6049	74.5125	51.1399	52.8816	65.4426	76.0244	81.8009	74.8782	125.0755	159.5137	129.4666	107.3203	132.251	153.4995	160.8076	167.2701	172.8223	204.3215	203.0176	179.4273	144.947	127.7852	105.6041	202.6572	29.9304	32.7223	56.831	61.2621	66.6932	38.8249	45.5317	46.0026	50.3321	66.6932	38.8249	45.5317	46.0026	50.3321	133.7954	101.1913	65.0369	]';
run_acc_y = [84.7585	86.4415	86.9763	87.1852	88.1643	86.6172	85.6328	88.4954	85.5452	86.1469	86.0638	85.2193	84.1301	83.0394	82.7858	82.6124	82.7725	80.2488	76.6014	75.8876	70.7265	69.2304	66.7521	65.4545	56.0851	54.1328	51.5572	38.8925	30.3718	23.0704	18.2018	42.7737	48.2534	51.1715	54.2701	56.726	60.8888	64.4084	64.7373	70.3188	71.8706	74.9811	76.0946	76.4899	71.9434	69.6072	67.2644	67.0239	64.6698	58.1793	57.3832	57.1322	53.1035	51.4751	49.6008	47.0381	44.8629	44.226	41.3094	38.0157	27.7903	25.4851	26.2441	34.6881	36.0074	40.2051	40.448	40.4895	42.0654	42.5012	42.7375	43.6162	45.1692	40.3951	36.3424	35.4169	34.3496	32.7899	29.6234	26.6577	48.614	50.5504	51.3934	56.726	62.4325	64.51	64.7373	71.8706	76.401	73.356	72.6592	70.9153	65.5562	58.1793	56.3495	49.6008	44.1852	41.3094	36.0772	25.4851	22.9345	22.0311	16.4779	16.4558	17.8773	18.045	63.1115	65.6945	66.2287	65.768	63.4216	63.3515	60.8886	59.7939	55.4943	54.3083	51.9577	50.6713	47.921	46.5395	44.9526	9.9995	14.5522	14.5063	19.1052	19.3447	19.688	20.4922	20.8438	20.5259	22.279	63.1115	63.3515	61.0141	59.5175	47.921	20.8217	10.1248	10.3521	]';
run_mean_afterpeak_polarr = run_peak_polarr;
run_var_afterpeak_polarr = run_peak_polarr;
run_mean_afterpeak_gyro = run_peak_polarr;
run_var_afterpeak_gyro = run_peak_polarr;
% play
play_peak_polarr = [2.0328	0.9143	1.0195	0.8123	0.6017	1.1496	0.5947	0.8448	0.6203	0.5806	0.9109	0.5806	0.9109	1.0444	1.0509	1.5197	1.1523	0.9947	1.7331	0.5267	1.0715	2.2522	1.5221	0.7238	0.8505	1.1052	0.6131	0.6412	0.7828	0.9777	0.55	0.6896	0.5785	0.9747	0.5086	0.8926	0.5613	0.593	0.6254	0.5093	0.5267	0.5291	0.8879	0.6057	0.5378	0.5389	0.7614	0.7989	0.7006	0.8494	1.2848	1.0996	1.314	0.5086	0.8926	0.5613	0.593	0.6254	0.5093	0.5267	0.5291	0.8879	0.6057	0.5378	0.5389	0.7614	0.7989	0.7006	0.8494	1.2848	1.0996	1.314	0.7205	0.5884	1.8604	2.3837	0.6871	1.9484	0.7275	0.8673	0.5164	0.9079	1.1939	1.5715	2.3893	2.1417	1.0068	0.6811	0.5556	1.9649	1.1851	2.5107	1.0385	0.9615	1.02	0.6864	0.558	0.5828	0.8638	1.02	0.6864	0.558	0.5828	0.8638	0.6523	0.5419	0.7885	0.5297	0.5079	0.736	2.4624	1.2177	0.7375	0.6041	0.7885	0.5297	0.5079	0.736	2.4624	1.2177	0.7375	0.6041	0.5552	0.5151	0.5198	0.5135	0.7456	1.1564	1.8759	1.1292	1.4284	0.6329	0.5001	1.1278	0.9862	0.6844	0.5678	0.6311	0.6488	1.2779	0.8959	0.639	0.6007	0.5678	0.6311	0.6488	1.2779	0.8959	0.639	0.6007	0.6631	0.8413	0.5647	0.5465	1.0126	1.033	0.6478	0.5825	0.8746	0.519	0.6438	0.7067	0.7087	0.7961	1.3035	1.2201	1.0599	0.6281	1.0745	0.7471	0.7775	1.2201	1.0599	0.6281	1.0745	0.7471	0.7775	1.0986	0.5127	1.1131	0.5743	0.7338	2.8107	1.1188	0.9182	0.5917	0.6315	1.1936	0.5622	0.7337	0.7801	0.5133	0.8948	0.7337	0.7801	0.5133	0.8948	0.6686	0.7151	0.6476	0.9041	0.8566	1.0192	0.6552	0.9096	0.6868	0.571	1.8482	0.5292	0.6492	1.0083	0.6401	1.0072	0.7966	0.6784	1.3858	0.7971	0.5686	2.8069	1.9137	1.5036	0.5109	0.9847	1.3429	0.631	1.7353	0.5601	0.7867	1.2179	0.853	0.7318	1.2736	0.5613	0.7162	0.7759	0.652	0.6152	2.8284	2.8284	1.1845	2.0142	0.5488	0.5662	0.5513	1.0499	1.0499	0.5517	0.622	0.5596	0.5596	0.7175	0.8755	0.508	0.538	0.5248	1.1732	1.561	0.877	0.5852	0.5007	0.5686	1.0369	1.0073	0.5339	0.9731	1.0385	0.7538	0.6415	0.7647	0.5005	0.5153	0.6393	1.3963	1.2287	0.7763	1.082	0.6248	0.6126	0.7359	0.5688	2.0907	0.6713	1.3836	0.5569	0.8063	0.9835	0.6705	0.5496	0.8583	0.6292	0.8022	0.7241	0.5147	1.2701	1.341	0.6332	0.6617	0.5122	0.8848	0.8761	0.514	1.0339	1.0543	0.7241	0.5147	1.2701	1.341	0.6332	0.6617	0.5122	0.8848	0.8761	0.514	1.0339	1.0543	0.6936	1.3644	0.7911	0.5452	0.5202	0.5196	0.5328	0.5887	0.8263	1.0101	0.5707	0.5265	1.0101	0.5707	0.5265	0.734	1.3894	0.9591	0.9944	0.5544	0.7883	1.2964	0.8394	0.5517	0.5501	0.7308	0.6112	0.5308	0.5535	0.7169	0.5457	0.5465	0.7713	0.5531	0.5457	0.5465	0.7713	0.5531	0.6784	0.5078	0.5347	0.6602	1.0268	0.5569	1.0268	0.5569	0.8203	0.5665	0.5392	0.8043	1.088	0.5834	0.6132	0.5406	0.8903	0.8974	0.7358	1.0662	1.2153	1.1538	1.2821	0.688	0.7016	0.9456	0.6939	0.5014	0.6206	1.1056	0.9986	0.8856	0.9048	1.1934	0.6486	0.5755	0.6939	0.5014	0.6206	1.1056	0.9986	0.8856	0.9048	1.1934	0.6486	0.5755	0.5256	0.5734	0.6528	0.5448	0.9099	0.8612	0.8699	1.2265	0.941	0.6528	0.5448	0.9099	0.8612	0.8699	1.2265	0.941	0.5869	1.0081	0.5184	0.5869	1.0081	0.5184	0.722	0.6922	0.5554	0.5553	0.5323	0.6922	0.5554	0.5553	0.5323	]';
play_delta_polarth = [30.4834	148.4532	6.5629	16.4557	20.089	33.4526	84.8862	4.1903	39.0268	4.5488	5.6943	4.5488	5.6943	9.3218	59.225	152.8915	17.9746	110.262	4.4286	104.6064	5.6785	10.8116	5.7704	8.8153	26.649	19.4898	78.6434	61.4139	20.9821	8.6441	30.4662	35.0685	171.5749	3.9661	38.3225	38.8661	9.1047	51.6122	28.0913	7.0794	31.014	51.6456	60.005	144.0552	58.8107	103.3358	37.5571	116.6474	65.18	16.2237	45.3424	133.56	56.2153	38.3225	38.8661	9.1047	51.6122	28.0913	7.0794	31.014	51.6456	60.005	144.0552	58.8107	103.3358	37.5571	116.6474	65.18	16.2237	45.3424	133.56	56.2153	10.965	74.5012	15.0355	15.908	82.3052	12.752	107.481	8.7119	18.4486	53.9091	58.8787	46.213	41.7984	57.0793	33.3423	71.288	64.185	6.165	33.6171	127.9824	25.3941	22.117	50.4464	90.3084	22.3831	176.7702	6.46	50.4464	90.3084	22.3831	176.7702	6.46	51.0324	23.6195	4.6829	9.8502	31.6585	16.5606	3.0229	53.708	33.0266	160.4536	4.6829	9.8502	31.6585	16.5606	3.0229	53.708	33.0266	160.4536	46.5905	29.7388	8.9202	148.2354	57.5009	4.6148	56.6836	26.2063	123.8237	35.1527	103.2076	170.5794	32.7845	81.833	28.9929	4.2091	34.8026	165.7356	1.0553	46.3131	65.5379	28.9929	4.2091	34.8026	165.7356	1.0553	46.3131	65.5379	45.2683	14.222	3.6	43.1774	3.4456	59.9119	38.7714	43.7979	20.6049	37.7584	18.6985	8.5986	52.4055	95.2233	2.0003	92.5738	48.8038	40.5012	50.7367	1.622	24.8349	92.5738	48.8038	40.5012	50.7367	1.622	24.8349	121.7604	116.9723	22.1709	8.496	46.678	35.2835	7.0713	137.5095	18.4578	130.5386	12.0361	53.4943	38.156	71.1603	23.1912	3.8345	38.156	71.1603	23.1912	3.8345	2.8529	15.9555	108.606	140.1694	0.443	5.0068	175.951	8.7747	2.7532	5.6356	22.948	33.9422	162.6608	42.923	47.9505	19.6122	8.0795	100.7583	28.8881	93.9838	145.2323	15.0428	59.3621	5.8986	11.3489	4.0579	0.3808	63.5652	23.4669	174.5858	51.4139	7.6327	120.5065	6.108	4.1442	8.7419	19.4623	13.5207	45.4426	14.2395	21.1792	19.8115	29.3951	23.1448	52.3386	50.4633	4.0726	18.1943	18.1943	82.6644	28.7203	9.4891	9.4891	57.9598	43.5476	85.9683	36.0996	74.9365	174.3458	122.3394	52.2288	89.9515	45.2643	50.1204	5.6686	167.9315	3.1408	112.2776	55.3878	112.4736	154.7381	3.3762	41.7844	81.6367	167.0693	41.9446	29.8893	53.9354	10.3131	19.2312	151.8874	35.5371	79.6814	78.206	179.6224	49.7983	71.9675	46.5681	19.1232	27.4591	75.899	30.9883	96.3126	79.8023	34.7014	9.0613	79.9926	134.0771	5.751	143.3768	111.8615	35.3256	25.2161	116.0361	106.4872	50.8983	34.7014	9.0613	79.9926	134.0771	5.751	143.3768	111.8615	35.3256	25.2161	116.0361	106.4872	50.8983	59.5845	29.689	122.2868	103.6712	34.9713	29.4286	37.8231	68.0651	0.0665	8.7597	18.8969	42.016	8.7597	18.8969	42.016	41.567	86.749	82.3509	61.0226	5.9896	142.5935	38.7292	18.3132	26.8669	20.5087	73.9052	6.9753	3.0574	0.4755	6.0124	3.2296	177.0969	73.1664	30.9667	3.2296	177.0969	73.1664	30.9667	8.1211	50.1547	115.413	44.2898	29.3927	18.5929	29.3927	18.5929	15.8076	19.9518	15.0601	30.3296	62.155	8.9104	87.2401	3.3621	68.6961	22.3505	12.6891	21.1866	5.1009	2.8096	61.5282	51.8177	176.6262	9.7639	17.781	14.128	6.0246	0.4992	60.6478	4.9668	5.3063	20.317	144.9661	32.3687	17.781	14.128	6.0246	0.4992	60.6478	4.9668	5.3063	20.317	144.9661	32.3687	140.2141	27.5943	21.731	53.4288	42.5566	79.4682	124.9324	148.536	32.9443	21.731	53.4288	42.5566	79.4682	124.9324	148.536	32.9443	170.3186	26.559	8.1031	170.3186	26.559	8.1031	34.6165	30.4644	5.3184	2.1979	3.7616	30.4644	5.3184	2.1979	3.7616	]';
play_mean_peak_gyro = [181.9424	153.8164	137.7537	123.9591	133.8734	138.0725	104.826	91.6843	31.8136	46.3029	76.3828	46.3029	76.3828	164.934	153.6174	139.77	176.2389	174.5078	143.0645	197.3563	217.4531	207.1369	137.9402	130.7733	123.813	110.8827	127.6885	181.5046	183.5601	175.3316	123.1104	89.9706	79.7598	77.2074	62.4015	43.7418	44.9825	77.8508	84.3611	97.5018	92.5899	74.716	67.5869	56.427	46.3025	49.4636	81.1805	104.4143	104.4518	83.0261	106.3749	118.2606	119.5184	62.4015	43.7418	44.9825	77.8508	84.3611	97.5018	92.5899	74.716	67.5869	56.427	46.3025	49.4636	81.1805	104.4143	104.4518	83.0261	106.3749	118.2606	119.5184	97.8201	134.0389	142.0902	143.788	98.8315	92.3159	68.5397	51.4666	39.0912	88.0401	227.1307	288.3172	281.4097	243.3433	186.561	85.6129	119.3478	138.0696	116.2289	158.4997	185.4451	178.743	96.7767	118.2387	147.2398	106.6943	75.2996	96.7767	118.2387	147.2398	106.6943	75.2996	151.7277	56.2606	49.8283	41.93	86.9436	119.806	126.6525	111.1178	122.1621	72.5709	49.8283	41.93	86.9436	119.806	126.6525	111.1178	122.1621	72.5709	68.1338	57.4692	38.4211	59.799	94.244	137.5568	118.0697	87.759	72.4908	69.7767	54.5835	100.8601	94.9122	129.5747	72.5371	162.5348	187.9931	184.5272	123.7848	63.3999	69.854	72.5371	162.5348	187.9931	184.5272	123.7848	63.3999	69.854	198.6861	250.8278	254.6283	255.181	252.7497	171.6414	139.8601	136.8364	213.4459	124.0571	72.3593	67.5427	119.7454	170.0015	192.1584	139.417	114.8272	78.2403	152.5277	201.41	111.1118	139.417	114.8272	78.2403	152.5277	201.41	111.1118	122.1589	204.547	131.5481	160.3944	207.255	183.9896	120.1774	99.5666	75.5254	79.8474	83.7516	80.3736	98.5631	138.8595	91.6825	61.2196	98.5631	138.8595	91.6825	61.2196	73.8906	85.0759	84.4238	90.7968	90.8558	92.0916	101.9772	103.112	141.0704	159.0507	160.166	166.4011	150.2928	98.1416	91.6116	95.6953	109.289	113.1167	102.1137	115.4642	134.5405	143.7484	128.7489	97.7832	104.4113	186.3222	202.7773	180.8568	180.96	141.2486	114.306	84.2736	88.101	104.8895	104.3594	86.3203	91.1073	89.7536	87.8433	99.639	139.5936	137.5649	107.755	103.7441	68.2675	82.8567	62.5391	84.6708	84.6708	81.4029	105.7446	74.3856	74.3856	76.9497	69.2149	56.1754	46.2874	38.7057	85.6218	90.0038	62.9365	143.7796	146.481	128.5718	95.493	96.8926	101.5886	71.6623	60.3661	48.7163	45.2578	234.578	252.8575	216.2527	99.392	92.7128	79.2292	63.2021	58.9975	54.125	53.6845	63.6371	99.3692	114.2054	92.6265	113.8196	64.4324	78.1183	72.5759	63.9859	63.7801	86.0096	112.9271	111.7863	110.3582	107.0001	162.2787	148.6234	96.9991	65.6177	90.2349	80.6647	55.1023	45.5066	88.0532	83.3446	110.3582	107.0001	162.2787	148.6234	96.9991	65.6177	90.2349	80.6647	55.1023	45.5066	88.0532	83.3446	115.9459	140.7849	173.0965	221.8918	225.2157	225.2333	169.52	105.2077	54.5081	49.3315	39.4208	28.366	49.3315	39.4208	28.366	67.9249	82.3476	89.2348	109.3795	77.9632	69.5249	74.2549	63.5552	53.6385	37.5499	35.4617	115.7317	151.3671	93.4284	45.14	62.4462	57.497	54.7725	34.2306	62.4462	57.497	54.7725	34.2306	63.5638	82.1986	99.7784	110.3637	195.7376	90.4463	195.7376	90.4463	79.0007	103.0017	152.5901	167.1038	173.0174	182.4853	143.3716	148.4643	122.4742	108.3368	138.4414	189.7524	240.6242	257.9622	258.7806	254.6001	248.7042	238.7467	211.9445	156.6811	152.709	208.2057	169.8328	143.9587	166.6441	199.425	124.3127	52.3049	211.9445	156.6811	152.709	208.2057	169.8328	143.9587	166.6441	199.425	124.3127	52.3049	57.5651	43.2707	38.5309	50.1255	123.236	127.5548	75.0417	74.3861	69.2796	38.5309	50.1255	123.236	127.5548	75.0417	74.3861	69.2796	49.0214	57.0846	19.1066	49.0214	57.0846	19.1066	134.0628	41.715	42.1803	44.1913	46.3371	41.715	42.1803	44.1913	46.3371	]';
play_acc_y = [52.4987	49.6986	47.8279	39.9424	37.2575	31.2564	30.6661	28.6863	6.8352	25.1603	30.3724	14.1858	13.1401	11.5388	11.1572	9.4214	7.5959	7.1604	6.9248	6.7498	6.6775	6.3667	6.26	6.2039	6.1245	5.8311	5.5635	4.9951	4.8662	4.884	4.7996	4.147	3.6831	3.5212	3.1565	3.2332	4.7412	5.8193	6.0962	6.2715	6.3904	6.2437	6.3704	6.6667	7.3684	7.8586	10.9352	13.0218	17.2286	19.4412	21.4636	26.455	28.759	53.3646	50.5321	37.3137	33.0036	30.6407	30.6954	29.658	27.7845	25.8358	24.0433	23.9009	21.2754	20.5461	19.6829	18.0408	15.748	14.1138	14.3372	13.8584	12.1296	11.2815	10.8911	9.0828	7.7671	7.5959	7.3957	7.1604	6.9058	6.6775	6.26	6.2834	6.1357	6.1245	5.634	5.2353	4.9019	4.8728	4.8191	3.3049	3.2769	3.2712	3.2903	3.2273	3.4265	4.4363	7.0415	48.7182	46.5948	45.4	37.9775	23.73	6.7498	3.2869	3.2903	3.2661	4.0674	4.9941	5.9553	6.2715	7.8586	21.4636	48.7182	46.3589	40.7859	36.4665	33.1591	30.6954	21.2754	14.1138	11.1572	7.1216	7.6858	26.0175	27.5053	29.0201	31.4124	32.0176	32.2351	32.6013	32.8943	32.1548	32.0595	33.5396	24.5786	21.5906	20.8091	19.1631	16.6378	16.817	16.5079	8.7771	7.3733	6.8931	7.073	7.0645	6.5293	6.6455	24.5405	24.3823	24.3386	25.1159	27.5053	30.0794	31.4346	31.4009	32.9832	31.7954	33.5396	26.2172	24.7646	24.2951	24.3305	24.6733	24.2927	16.4471	16.5089	16.6942	12.9728	9.1001	7.5618	7.0295	6.8005	7.1021	13.0743	29.4357	31.322	32.2351	32.6013	32.9619	32.936	33.1521	32.481	32.149	28.0544	26.8808	24.3412	16.6378	16.6942	13.9137	10.3604	7.0645	7.1021	12.6268	24.2473	24.4724	24.5969	24.4733	24.2661	24.5947	25.7253	26.7435	27.5746	29.4357	30.0794	31.3589	31.4124	31.4009	32.2351	32.7471	32.9619	32.9243	32.8096	33.1521	32.3789	32.2098	33.5396	31.6387	30.616	28.0766	26.2172	24.7646	49.6553	49.4211	53.8676	55.016	53.9183	53.5541	53.2982	54.8722	55.1451	57.4021	55.7481	48.868	47.6373	44.6919	44.5767	39.6877	29.397	23.3657	13.5576	12.7844	13.4521	53.5541	29.4504	12.834	16.9529	29.4565	20.3224	13.6333	12.3606	12.6196	18.5717	14.2028	13.2289	14.7292	14.6078	15.2912	14.6262	12.9924	12.3164	12.3562	13.1597	13.8447	15.0813	13.1763	14.0146	13.4983	13.9646	35.2418	37.8704	41.2672	42.9991	45.0605	49.6511	50.0727	50.1496	51.051	49.7558	46.7897	47.829	49.8336	56.2491	55.0549	55.8228	48.4807	47.461	46.3089	45.942	45.2383	44.9571	46.128	47.1614	47.5535	49.0088	51.8743	50.6746	49.1417	40.31	34.7427	33.8358	17.8578	17.5023	13.3889	13.8743	14.363	15.1348	18.8315	18.2964	20.6614	26.5612	32.1698	34.5521	45.0605	46.1777	48.5717	50.0727	50.1496	50.258	50.9641	47.0629	56.131	44.909	51.8743	50.2444	17.5695	18.8315	17.7305	38.1791	38.3925	39.5217	39.4145	37.4853	36.9794	35.0807	32.32	30.3115	18.7856	18.6016	12.76	13.0679	12.4399	14.2307	14.9988	13.9614	14.6157	13.3452	39.0031	31.3415	29.6972	24.454	13.1631	13.916	14.269	14.6169	13.728	15.5464	38.9582	38.7834	19.0588	15.2903	13.0693	13.22	13.1169	12.8118	12.5159	12.1101	13.0007	11.167	12.2715	12.8528	13.1345	13.8137	13.9036	14.6624	14.6169	14.2009	14.3953	13.8889	13.6663	14.4863	15.0427	15.1211	15.408	15.7568	14.5266	14.6003	36.6774	38.4528	39.8535	39.3342	38.7121	38.7812	36.8915	36.788	36.9794	35.154	8.5105	5.6353	34.6066	42.5918	43.1404	43.1973	41.146	40.4832	39.2402	5.0391	5.0034	4.8462	4.8108	4.1357	3.8176	3.8689	43.0156	42.2534	37.8086	4.8533	4.8374	4.561	7.9546	26.5202	31.4843	36.4743	40.9573	4.915	5.0015	5.0125	5.072	]';
play_mean_afterpeak_polarr = play_peak_polarr;
play_var_afterpeak_polarr = play_peak_polarr;
play_mean_afterpeak_gyro = play_peak_polarr;
play_var_afterpeak_gyro = play_peak_polarr;
% shoulderhit
shoulderhit_peak_polarr = [2.5375	2.3753	1.3125	2.8284	2.8284	2.4125	1.2246	2.8483	1.943	1.2439	1.1056	1.1919	0.5496	0.507	0.9941	0.5968	0.6076	0.5133	0.7119	1.3092	0.8519	0.5398	1.1847	0.9333	0.9911	0.8562	0.7864	0.7441	1.527	1.3619	2.8283	1.208	1.5289	2.6601	1.0824	0.8576	2.8049	2.826	1.5872	2.1343	0.9532	2.2229	0.7119	1.4355	2.8284	1.4819	1.6754	1.367	2.5162	1.2286	2.0516	1.3306	1.5039	2.4548	0.7653	0.8111	2.0979	0.6448	1.5564	1.7217	0.5835	2.3569	2.4502	1.7935	2.147]';
shoulderhit_delta_polarth = [132.0847	144.9338	179.5808	16.4612	24.7328	130.8865	167.2299	104.4864	150.9072	156.4713	177.4703	164.0118	34.7128	98.4195	172.9058	175.5571	6.8632	176.9735	173.6793	95.946	31.1138	147.0581	19.9528	124.3018	7.096	49.5406	61.7502	90.3698	55.0746	126.2909	114.1264	136.2291	172.482	44.5428	101.8464	173.4022	75.6932	0.0212	149.6423	81.4894	152.7449	61.888	170.5176	144.5039	30.4554	64.3374	15.2933	170.4004	31.2088	129.5255	61.6163	67.5695	163.9707	48.4848	170.5423	103.6576	67.3698	117.4562	109.7679	62.291	141.476	58.7702	66.0489	137.6372	82.3523]';
shoulderhit_mean_peak_gyro = [233.9483	234.3753	170.0356	145.4853	280.4755	215.3417	168.3363	289.0356	105.1509	88.4161	65.0584	55.4136	60.6823	77.2449	53.4965	63.3181	76.0557	55.4891	101.7625	75.2492	50.2913	92.1737	184.2592	59.2883	195.0662	165.5288	86.8063	81.0079	100.259	98.94	272.836	178.1215	187.2897	161.6936	243.4362	265.1192	154.7434	207.3116	226.5217	224.964	79.7931	161.7811	76.0533	187.7863	171.9614	105.8896	99.0062	116.8183	123.8852	130.7524	127.8294	146.8745	191.3258	178.5019	149.8204	111.7437	113.4336	107.0244	120.9563	130.2084	155.4009	161.291	146.5199	146.3044	128.5239]';
shoulderhit_acc_y = [32.696	32.8838	42.0568	52.4639	43.464	44.4445	44.6571	55.1913	59.2846	59.3452	60.0391	60.8984	13.8934	11.4374	28.2573	24.7197	13.6639	9.5908	19.188	19.4047	32.9301	29.7125	24.0797	9.3347	37.7718	35.8023	18.8164	17.6045	13.7076	14.0655	45.1257	45.4453	37.4339	36.9257	32.1513	37.884	45.0539	21.2922	21.3086	48.1191	49.6113	31.7205	36.4698	38.7725	38.636	21.4138	22.1868	22.2427	27.653	27.2758	26.7736	26.6979	22.8611	22.9197	23.4752	26.5835	26.4568	25.8489	24.7409	24.2299	24.2753	25.341	30.1996	30.1703	27.7174]';
shoulderhit_mean_afterpeak_polarr = shoulderhit_peak_polarr;
shoulderhit_var_afterpeak_polarr = shoulderhit_peak_polarr;
shoulderhit_mean_afterpeak_gyro = shoulderhit_peak_polarr;
shoulderhit_var_afterpeak_gyro = shoulderhit_peak_polarr;
% push
push_peak_polarr = [1.7772	1.2737	2.2536	2.4316	1.5135	1.0446	2.115	2.1051	0.5224	2.1311	2.1809	2.0389	0.7459	0.9927	0.7285	0.8282	0.5294	1.2744	2.0064	2.1798	1.5443	1.2277	2.8948	1.4105	2.2855	1.3326	0.9662	1.1435	2.1714	0.7611	0.577	1.4434	1.4232	2.1375	1.3252	1.8252	0.8182	2.0971	0.7477	1.5657	2.0369	2.0012	1.6661	2.5706	0.5579	1.99	1.322	1.7971	1.0415	1.6999	1.3227	0.5532	2.2643	1.1309	2.3268	1.3904	2.2116	0.7345	2.8992	1.0348	0.931	2.9312	1.2887	0.8169	1.6252	0.846	2.1062	0.524	0.796	0.5403	1.5899	1.7521	0.6832	0.7724	0.6573	1.3069	1.4265	2.11	1.5249	0.7068	2.5571	2.3531	0.654	0.9751	1.2874	2.8677	0.9282	2.1496	2.5236	1.3908	0.7237	1.1175	0.5817	0.6279	1.6299	2.5236	2.4193	2.4867	2.7939	2.5236	0.8161	2.0763	2.604	0.6542	1.4173	2.0704	0.5747	0.5559	2.3418	1.9622	0.6191	2.8284	2.8284	2.5402	1.5855	1.5837	1.117	1.392	1.1242	1.068	0.6984	2.2475	1.0975	2.4631	1.4835	0.5812	2.5972	1.3912	2.3757	1.4198	2.1813	2.7812	0.7995	0.9326	2.8284	2.8283	0.5613	2.2348	1.9154	1.842	1.0053	1.4342	1.7028	1.1158	2.8284	1.5672	2.8283	1.3772	2.6317	0.5341	0.5252]';
push_delta_polarth = [44.0856	173.4941	38.3045	25.9225	72.452	176.1126	1.1827	102.0708	176.558	154.5035	72.4169	160.7693	174.4575	139.3008	166.6277	161.6156	176.389	109.4565	62.2271	8.5785	139.1341	177.3526	136.0353	146.8006	100.0502	162.0414	174.0219	171.9681	144.9484	166.3441	170.12	111.4045	124.347	5.5809	130.8936	94.6483	174.8935	172.994	177.0438	174.4837	113.9238	149.5468	178.5432	124.0329	179.1451	159.3074	170.0845	150.6467	178.8994	151.2662	162.659	179.4858	137.3746	175.7498	42.6534	176.1838	163.9316	177.4873	129.127	176.6399	177.1252	168.5918	178.9367	179.9628	147.9993	178.7583	145.3736	48.8124	9.9696	14.1956	131.6556	133.5629	168.6205	165.2426	176.3089	153.923	112.7701	120.2242	178.0942	179.6686	123.259	173.0715	179.737	179.2554	176.956	113.7501	162.6772	113.6949	13.3166	132.1544	168.9489	160.9333	175.4062	119.8415	112.0109	53.2767	169.8534	141.544	48.4493	109.8709	128.7937	122.3199	119.7739	170.571	153.7278	53.7689	18.472	66.0606	27.9562	66.5522	169.4226	149.969	20.8429	103.2611	105.1624	144.6592	172.9023	159.4701	162.4609	177.1123	161.6607	44.6453	155.7513	37.1902	95.2029	179.5383	176.4069	148.1669	17.4595	102.4661	66.7423	4.1637	174.1881	113.2405	11.8281	95.0776	136.1963	7.6554	26.4219	53.8332	160.9421	92.5026	80.9194	169.7547	8.929	150.4212	91.0261	167.1732	175.9384	21.6494	71.0531]';
push_mean_peak_gyro = [137.634	134.4866	203.4108	188.1478	71.8711	148.8996	98.5629	160.5161	84.5953	143.1094	107.1193	192.105	59.155	96.4026	220.2455	115.5867	78.4063	267.798	308.5377	305.6213	148.9513	101.8967	179.1761	139.0472	100.6177	106.0748	115.9489	153.2321	132.329	50.5452	81.3547	73.4841	236.9453	241.5731	227.755	174.1675	172.971	146.9116	157.2179	100.6353	151.999	107.2692	116.7772	174.1127	103.4256	133.3664	174.9454	99.6397	104.8211	145.7648	104.2104	48.9518	86.327	121.843	123.2366	266.873	131.3744	144.745	178.2878	122.1142	88.2076	158.2722	169.8873	77.5157	88.8341	125.8756	139.4695	43.5717	48.8436	38.0622	143.4619	62.0072	96.551	92.994	63.5516	92.1358	98.1002	99.0373	150.5932	52.4863	148.964	138.8756	103.5329	78.771	64.6326	143.7545	108.8006	165.3165	188.4196	173.87	130.9442	128.5119	78.5399	44.9469	35.7938	316.6797	339.4598	307.0988	278.5473	120.8982	102.2033	170.2227	188.9608	207.2138	151.3705	110.3604	36.0927	44.8752	137.3576	92.0914	184.3156	116.0461	165.5792	280.7867	215.8506	116.3918	157.2395	94.1324	66.1327	27.0945	314.7802	311.9311	276.6131	237.3744	177.6032	107.0753	312.0016	102.7032	120.332	117.0661	117.5826	231.3009	217.1139	110.7978	191.4426	172.1786	69.2548	99.8971	109.2076	100.9456	157.4713	107.1606	160.2369	141.9762	163.0141	149.2571	119.9954	113.7064	71.583	39.6676	16.5764]';
push_acc_y = [53.1271	48.81	36.4553	34.6342	28.5454	21.0913	34.8073	39.6968	23.2895	33.8328	32.6853	36.5798	37.9055	21.6131	29.5167	29.6055	26.0131	30.0192	29.7456	30.1255	42.9705	30.0139	13.5757	13.8723	46.8136	48.5719	40.7293	24.3529	19.0496	22.7646	22.155	25.5824	38.2929	39.1212	39.5899	41.0139	34.6898	23.4746	31.8995	24.5521	49.207	30.114	24.4655	28.5752	17.5033	25.1883	19.2954	25.4207	25.3375	20.1195	19.2896	19.6235	19.6235	19.2419	18.4559	34.0155	33.9344	35.0605	34.4003	27.2592	33.126	30.4887	34.1409	42.4516	25.1364	44.133	25.6928	11.2072	23.6709	11.2399	42.7386	12.5894	39.4233	39.5134	38.7263	35.5078	11.6038	23.1305	23.1581	41.8204	40.4206	41.2317	35.8028	40.1522	40.2631	42.2969	40.8283	45.393	46.076	46.3073	46.7494	45.8438	8.5689	8.484	16.2053	103.5465	105.4715	107.8244	108.1425	44.9214	53.4248	66.5282	72.6996	54.2993	28.572	30.8855	10.6284	12.0137	49.6673	18.8663	69.0435	72.6106	35.1727	84.3538	101.1412	41.9644	36.9401	35.3573	36.6149	37.892	32.2784	30.1198	29.0624	70.5294	72.4174	27.4526	36.3137	42.2681	28.5058	28.8845	29.2943	23.0356	22.7456	34.7526	29.962	30.2296	29.2621	28.6088	28.5446	29.5057	35.6115	34.6811	34.5529	12.1421	13.5337	9.3931	17.905	15.0954	25.4565	9.843	9.2915]';
push_mean_afterpeak_polarr = push_peak_polarr;
push_var_afterpeak_polarr = push_peak_polarr;
push_mean_afterpeak_gyro = push_peak_polarr;
push_var_afterpeak_gyro = push_peak_polarr;

% 这里最好把原顺序打乱，以使训练集和测试集都包含不同年级的样本，可使用reord函数
% 最好只打乱训练集的数据，测试集仍保持完整动作
% make data
walk_all=[walk_peak_polarr walk_delta_polarth walk_mean_peak_gyro walk_acc_y walk_mean_afterpeak_polarr walk_var_afterpeak_polarr walk_mean_afterpeak_gyro walk_var_afterpeak_gyro];
situp_all=[situp_peak_polarr situp_delta_polarth situp_mean_peak_gyro situp_acc_y situp_mean_afterpeak_polarr situp_var_afterpeak_polarr situp_mean_afterpeak_gyro situp_var_afterpeak_gyro];
jump_all=[jump_peak_polarr jump_delta_polarth jump_mean_peak_gyro jump_acc_y jump_mean_afterpeak_polarr jump_var_afterpeak_polarr jump_mean_afterpeak_gyro jump_var_afterpeak_gyro];
run_all=[run_peak_polarr run_delta_polarth run_mean_peak_gyro run_acc_y run_mean_afterpeak_polarr run_var_afterpeak_polarr run_mean_afterpeak_gyro run_var_afterpeak_gyro];
play_all=[play_peak_polarr play_delta_polarth play_mean_peak_gyro play_acc_y play_mean_afterpeak_polarr play_var_afterpeak_polarr play_mean_afterpeak_gyro play_var_afterpeak_gyro];
shake_all=[shake_peak_polarr shake_delta_polarth shake_mean_peak_gyro shake_acc_y shake_mean_afterpeak_polarr shake_var_afterpeak_polarr shake_mean_afterpeak_gyro shake_var_afterpeak_gyro];
shoulderhit_all=[shoulderhit_peak_polarr shoulderhit_delta_polarth shoulderhit_mean_peak_gyro shoulderhit_acc_y shoulderhit_mean_afterpeak_polarr shoulderhit_var_afterpeak_polarr shoulderhit_mean_afterpeak_gyro shoulderhit_var_afterpeak_gyro];
push_all=[push_peak_polarr push_delta_polarth push_mean_peak_gyro push_acc_y push_mean_afterpeak_polarr push_var_afterpeak_polarr push_mean_afterpeak_gyro push_var_afterpeak_gyro];
% feature selection
walk_all=walk_all(:,1:4);
situp_all=situp_all(:,1:4);
jump_all=jump_all(:,1:4);
run_all=run_all(:,1:4);
play_all=play_all(:,1:4);
shake_all=shake_all(:,1:4);
shoulderhit_all=shoulderhit_all(:,1:4);
push_all=push_all(:,1:4);

% 按例划分。这部分需要重新赋值。在这里重新排序
% walk
walk1=walk_all(1,:);  % all 0s
walk2=walk_all(2,:);  % all 0s
walk3=walk_all(3:6,:);
walk4=walk_all(7,:);  
walk5=walk_all(8:12,:);
walk6=walk_all(13,:);  
walk7=walk_all(14,:);  % all 0s
walk8=walk_all(15:23,:);
walk9=walk_all(24:32,:);
walk10=walk_all(33:40,:);
walk11=walk_all(41:102,:);
walk12=walk_all(103,:);  % all 0s
walk_all=[walk1;walk11;walk3;walk9;walk5;walk7;walk6;walk8;walk4;walk10;walk2;walk12];
% situp
situp1=situp_all;
% jump
jump1=jump_all(1:27,:);
jump2=jump_all(28:52,:);
% run  
run1=run_all(1:29,:);
run2=run_all(30:31,:);
run3=run_all(32:106,:); 
run4=run_all(107:139,:);
run_all=[run1;run3;run2;run4];
% play  
play1=play_all(1:123,:);
play2=play_all(124:224,:);
play3=play_all(225:254,:);
play4=play_all(255:268,:);
play5=play_all(269:330,:);
play6=play_all(331:399,:);
play7=play_all(400,:); 
play8=play_all(401:430,:);
play_all=[play1;play7;play3;play5;play4;play6;play2;play8];
% shake
shake1=shake_all(1:3,:);
shake2=shake_all(4:7,:);
% shoulderhit   
shoulderhit1=shoulderhit_all(1:4,:);
shoulderhit2=shoulderhit_all(5:7,:);
shoulderhit3=shoulderhit_all(8:12,:);
shoulderhit4=shoulderhit_all(13:14,:); 
shoulderhit5=shoulderhit_all(15:16,:);
shoulderhit6=shoulderhit_all(17,:);
shoulderhit7=shoulderhit_all(18,:); 
shoulderhit8=shoulderhit_all(19:20,:);
shoulderhit9=shoulderhit_all(21:23,:); 
shoulderhit10=shoulderhit_all(24,:);
shoulderhit11=shoulderhit_all(25:28,:);
shoulderhit12=shoulderhit_all(29:30,:);
shoulderhit13=shoulderhit_all(31:32,:);
shoulderhit14=shoulderhit_all(33:34,:); 
shoulderhit15=shoulderhit_all(35:37,:); 
shoulderhit16=shoulderhit_all(38:41,:);
shoulderhit17=shoulderhit_all(42:45,:);
shoulderhit18=shoulderhit_all(46:48,:);
shoulderhit19=shoulderhit_all(49:52,:);
shoulderhit20=shoulderhit_all(53:55,:);
shoulderhit21=shoulderhit_all(56:58,:);
shoulderhit22=shoulderhit_all(59:62,:);
shoulderhit23=shoulderhit_all(63:65,:);
shoulderhit_all=[shoulderhit1;shoulderhit22;shoulderhit3;shoulderhit20;shoulderhit5;shoulderhit18;shoulderhit7;shoulderhit16;shoulderhit9;shoulderhit14;shoulderhit11;shoulderhit12;shoulderhit13;shoulderhit10;shoulderhit15;shoulderhit8;shoulderhit17;shoulderhit6;shoulderhit19;shoulderhit4;shoulderhit21;shoulderhit2;shoulderhit23];
% push  
push1=push_all(1:5,:);
push2=push_all(6:9,:);
push3=push_all(10:13,:);
push4=push_all(14:20,:);
push5=push_all(21:24,:);
push6=push_all(25:29,:);
push7=push_all(30:36,:);
push8=push_all(37:38,:);
push9=push_all(39:42,:);
push10=push_all(43:46,:);
push11=push_all(47:55,:);
push12=push_all(56:61,:);
push13=push_all(62:63,:);
push14=push_all(64:67,:); 
push15=push_all(68:69,:);
push16=push_all(70,:);
push17=push_all(71,:);
push18=push_all(72,:);
push19=push_all(73:77,:);
push20=push_all(78:79,:);
push21=push_all(80:86,:);
push22=push_all(87:92,:);
push23=push_all(93:95,:);
push24=push_all(96:99,:);
push25=push_all(100:101,:);
push26=push_all(102:104,:);
push27=push_all(105:106,:);
push28=push_all(107:108,:);
push29=push_all(109:110,:);
push30=push_all(111:112,:);
push31=push_all(113:120,:);
push32=push_all(121:125,:);
push33=push_all(126:127,:);
push34=push_all(128:133,:);
push35=push_all(134:137,:);
push36=push_all(138:143,:);
push37=push_all(144:148,:);
push38=push_all(149,:);
push39=push_all(150,:);
push40=push_all(151,:);
push_all=[push1;push39;push3;push37;push5;push35;push7;push33;push9;push31;push11;push29;push13;push27;push15;push25;push17;push23;push19;push21;push20;push22;push18;push24;push16;push26;push14;push28;push12;push30;push10;push32;push8;push34;push6;push36;push4;push38;push2;push40];
%打乱训练序列的数据顺序
% walk_all_re=[reord(walk_all(:,1)),reord(walk_all(:,2)),reord(walk_all(:,3)),reord(walk_all(:,4))];
% situp_all_re=[reord(situp_all(:,1)),reord(situp_all(:,2)),reord(situp_all(:,3)),reord(situp_all(:,4))];
% jump_all_re=[reord(jump_all(:,1)),reord(jump_all(:,2)),reord(jump_all(:,3)),reord(jump_all(:,4))];
% run_all_re=[reord(run_all(:,1)),reord(run_all(:,2)),reord(run_all(:,3)),reord(run_all(:,4))];
% play_all_re=[reord(play_all(:,1)),reord(play_all(:,2)),reord(play_all(:,3)),reord(play_all(:,4))];
% shake_all_re=[reord(shake_all(:,1)),reord(shake_all(:,2)),reord(shake_all(:,3)),reord(shake_all(:,4))];
% shoulderhit_all_re=[reord(shoulderhit_all(:,1)),reord(shoulderhit_all(:,2)),reord(shoulderhit_all(:,3)),reord(shoulderhit_all(:,4))];
% push_all_re=[reord(push_all(:,1)),reord(push_all(:,2)),reord(push_all(:,3)),reord(push_all(:,4))];

% K-NN training
walk_train = walk_all(1:(length(walk_peak_polarr)/2),:);
situp_train = situp_all(1:(length(situp_peak_polarr)/2),:);
jump_train = jump_all(1:(length(jump_peak_polarr)/2),:);
run_train = run_all(1:(length(run_peak_polarr)/2),:);
play_train = play_all(1:(length(play_peak_polarr)/2),:);
shake_train = shake_all(1:(length(shake_peak_polarr)/2),:);
shoulderhit_train = shoulderhit_all(1:(length(shoulderhit_peak_polarr)/2),:);
push_train = push_all(1:(length(push_peak_polarr)/2),:);
% training the classifier
k=3;
dim = size(walk_all,2); % number of features
ncenters=8; % number of activity types
trainingdata=[walk_train;situp_train;jump_train;run_train;play_train;shake_train;shoulderhit_train;push_train];
tr_targets=zeros(size(trainingdata,1),ncenters);
tr_targets(1:size(walk_train,1),1)=1;
tr_targets(size(walk_train,1)+1:size(walk_train,1)+size(situp_train,1),2)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1),3)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1),4)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1),5)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1),6)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+size(shoulderhit_train,1),7)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+size(shoulderhit_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+size(shoulderhit_train,1)+size(push_train,1),8)=1;
net = knn(dim,ncenters,k,trainingdata,tr_targets);

% K-NN testing
walk_test = walk_all((length(walk_peak_polarr)/2+0.5):length(walk_peak_polarr),:);
situp_test = situp_all((length(situp_peak_polarr)/2+0.5):length(situp_peak_polarr),:);
jump_test = jump_all((length(jump_peak_polarr)/2+0.5):length(jump_peak_polarr),:);
run_test = run_all((length(run_peak_polarr)/2+0.5):length(run_peak_polarr),:);
play_test = play_all((length(play_peak_polarr)/2+0.5):length(play_peak_polarr),:);
shake_test = shake_all((length(shake_peak_polarr)/2+0.5):length(shake_peak_polarr),:);
shoulderhit_test = shoulderhit_all((length(shoulderhit_peak_polarr)/2+0.5):length(shoulderhit_peak_polarr),:);
push_test = push_all((length(push_peak_polarr)/2+0.5):length(push_peak_polarr),:);
% test classifier
% tradtional K-NN
disp('Traditional K-NN');
disp('Show walk classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,walk6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

[y,lab] = knnfwd(net,walk8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

[y,lab] = knnfwd(net,walk4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

[y,lab] = knnfwd(net,walk10); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

[y,lab] = knnfwd(net,walk2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

[y,lab] = knnfwd(net,walk12); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show situp classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,situp1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show jump classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,jump2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show run classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,run2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,run4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
% [y,lab] = knnfwd(net,run6); % lab is the class into which the test data is classified
% cla=zeros(1,ncenters);
% cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
%      size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
%      size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
%      size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
% [y,ind]=max(cla);
% sum(ind)=sum(ind)+1;
% summ(4)=summ(4)+1; % all 0s
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show play classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,play4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,play6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,play2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,play8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

% [y,lab] = knnfwd(net,play7); % lab is the class into which the test data is classified
% cla=zeros(1,ncenters);
% cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
%      size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
%      size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
%      size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
% [y,ind]=max(cla);
% sum(ind)=sum(ind)+1;
% summ(5)=summ(5)+1; % all 0s
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show shake classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,shake2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show shoulderhit classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,shoulderhit13); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit10); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit15); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit17); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit19); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit21); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,shoulderhit23); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show push classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,push20); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push22); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push18); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push24); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push16); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push26); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push14); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push28); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push12); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push30); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push10); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push32); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push34); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push36); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;
[y,lab] = knnfwd(net,push38); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

[y,lab] = knnfwd(net,push2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

[y,lab] = knnfwd(net,push40); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
[y,ind]=max(cla);
summ(ind)=summ(ind)+1;

% summ(1)=summ(1)+1;  % all 0s
% summ(1)=summ(1)+1;  % all 0s
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

% modified K-NN:将每个动作所有特征数据作为一次样本进行分类，当有一定比例以上数据被分类为霸凌时，判断结果为霸凌
disp('Modified K-NN');
disp('Show walk classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,walk6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

[y,lab] = knnfwd(net,walk8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

[y,lab] = knnfwd(net,walk4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

[y,lab] = knnfwd(net,walk10); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

[y,lab] = knnfwd(net,walk2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

[y,lab] = knnfwd(net,walk12); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show situp classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,situp1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show jump classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,jump2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show run classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,run2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,run4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
% [y,lab] = knnfwd(net,run6); % lab is the class into which the test data is classified
% cla=zeros(1,ncenters);
% cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
%      size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
%      size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
%      size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
% [y,ind]=max(cla);
% sum(ind)=sum(ind)+1;
% summ(4)=summ(4)+1; % all 0s
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show play classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,play4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,play6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,play2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,play8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

% [y,lab] = knnfwd(net,play7); % lab is the class into which the test data is classified
% cla=zeros(1,ncenters);
% cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
%      size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
%      size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
%      size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
% [y,ind]=max(cla);
% sum(ind)=sum(ind)+1;
% summ(5)=summ(5)+1; % all 0s

disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show shake classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,shake2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show shoulderhit classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,shoulderhit13); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit10); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit15); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit17); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit19); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit21); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit23); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show push classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,push20); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push22); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push18); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push24); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push16); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push26); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push14); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push28); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push12); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push30); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push10); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push32); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push8); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push34); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push6); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push36); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push4); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push38); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

[y,lab] = knnfwd(net,push2); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

[y,lab] = knnfwd(net,push40); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

% summ(1)=summ(1)+1;  % all 0s
% summ(1)=summ(1)+1;  % all 0s
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Exchange training set and testing set');
% K-NN training
walk_train = walk_test;
situp_train = situp_test;
jump_train = jump_test;
run_train = run_test;
play_train = play_test;
shake_train = shake_test;
shoulderhit_train = shoulderhit_test;
push_train = push_test;
% training the classifier
k=3;
dim = size(walk_all,2); % number of features
ncenters=8; % number of activity types
trainingdata=[walk_train;situp_train;jump_train;run_train;play_train;shake_train;shoulderhit_train;push_train];
tr_targets=zeros(size(trainingdata,1),ncenters);
tr_targets(1:size(walk_train,1),1)=1;
tr_targets(size(walk_train,1)+1:size(walk_train,1)+size(situp_train,1),2)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1),3)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1),4)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1),5)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1),6)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+size(shoulderhit_train,1),7)=1;
tr_targets(size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+size(shoulderhit_train,1)+1:size(walk_train,1)+size(situp_train,1)+size(jump_train,1)+size(run_train,1)+size(play_train,1)+size(shake_train,1)+size(shoulderhit_train,1)+size(push_train,1),8)=1;
net = knn(dim,ncenters,k,trainingdata,tr_targets);
% testing the classifier
disp('Show walk classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,walk1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,walk11); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,walk3); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,walk9); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,walk5); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,walk7); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show situp classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,situp1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show jump classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,jump1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show run classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,run1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,run3); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show play classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,play1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,play7); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,play3); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,play5); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show shake classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,shake1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show shoulderhit classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,shoulderhit1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit22); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit3); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit20); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit5); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit18); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit7); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit16); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit9); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit14); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit11); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,shoulderhit12); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;

disp('   walk  situp  jump  run  play  shake shouldhit push');
summ

disp('Show push classification:');
summ=zeros(1,ncenters);
[y,lab] = knnfwd(net,push1); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push39); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push3); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push37); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push5); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push35); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push7); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push33); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push9); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push31); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push11); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push29); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push13); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push27); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push15); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push25); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push17); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push23); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push19); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
[y,lab] = knnfwd(net,push21); % lab is the class into which the test data is classified
cla=zeros(1,ncenters);
cla=[size(lab,1)-size(find(lab-1),1),size(lab,1)-size(find(lab-2),1),...
     size(lab,1)-size(find(lab-3),1),size(lab,1)-size(find(lab-4),1),...
     size(lab,1)-size(find(lab-5),1),size(lab,1)-size(find(lab-6),1),...
     size(lab,1)-size(find(lab-7),1),size(lab,1)-size(find(lab-8),1)];
if (cla(6)+cla(7)+cla(8))/sum(cla)>thres
    [y,ind]=max([0 0 0 0 0 cla(6) cla(7) cla(8)]);
    summ(ind)=summ(ind)+1;
else
    [y,ind]=max(cla);
    summ(ind)=summ(ind)+1;
end;
disp('   walk  situp  jump  run  play  shake shouldhit push');
summ
